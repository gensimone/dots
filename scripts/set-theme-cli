#!/bin/python

from signal import signal, SIGINT
import sys
import subprocess as sp
import curses
import os


def sigint_handler(_: int) -> None:
    sys.exit(1)


signal(signalnum=SIGINT, handler=lambda sig, _: sigint_handler(sig))


def main(stdscr, theme_path: str) -> None:
    curses.curs_set(0)
    stdscr.clear()

    themes = [theme for theme in os.listdir(theme_path)]

    cursor_position = 0

    while True:
        stdscr.clear()

        width = stdscr.getmaxyx()[1]
        for i, theme in enumerate(themes):
            centered_theme = theme.center(width - 2)
            if i == cursor_position:
                stdscr.addstr(i + 1, 1, centered_theme, curses.A_REVERSE)
            else:
                stdscr.addstr(i + 1, 1, centered_theme)

        stdscr.refresh()
        c = stdscr.getch()

        if c == ord('k'):
            if cursor_position > 0:
                cursor_position -= 1
            else:
                cursor_position = len(themes) - 1

        elif c == ord('j'):
            if cursor_position < len(themes) - 1:
                cursor_position += 1
            else:
                cursor_position = 0

        elif c == ord('\n'):
            selected_theme = themes[cursor_position]
            stdscr.clear()
            curses.endwin()
            process = sp.Popen(f'set-theme {theme_path}/{selected_theme}', shell=True)
            process.wait()
            break


if __name__ == "__main__":
    try:
        curses.wrapper(main, '/home/simone/Codes/dots/themes/themes/')
    except Exception:
        exit(0)
